import os
import sys
import subprocess
import time
from pathlib import Path

def install_as_service():
    """Windows servis olarak Python API'yi kurar"""
    
    # Gerekli dizinler
    current_dir = Path(__file__).parent.absolute()
    api_file = current_dir / "api.py"
    
    # Python executable path
    python_exe = sys.executable
    
    print("üîß Linkcim Video API - Windows Servisi Kurulumu")
    print("=" * 50)
    
    # NSSM (Non-Sucking Service Manager) gerekli
    nssm_path = current_dir / "nssm.exe"
    
    if not nssm_path.exists():
        print("‚ùå NSSM bulunamadƒ±. ƒ∞ndiriliyor...")
        try:
            # NSSM indirme
            import urllib.request
            import zipfile
            
            nssm_url = "https://nssm.cc/release/nssm-2.24.zip"
            zip_path = current_dir / "nssm.zip"
            
            print("üì¶ NSSM indiriliyor...")
            urllib.request.urlretrieve(nssm_url, zip_path)
            
            print("üìÇ NSSM √ßƒ±karƒ±lƒ±yor...")
            with zipfile.ZipFile(zip_path, 'r') as zip_ref:
                zip_ref.extractall(current_dir)
            
            # Doƒüru NSSM dosyasƒ±nƒ± kopyala
            import shutil
            nssm_source = current_dir / "nssm-2.24" / "win64" / "nssm.exe"
            shutil.copy2(nssm_source, nssm_path)
            
            # Temizlik
            zip_path.unlink()
            shutil.rmtree(current_dir / "nssm-2.24")
            
            print("‚úÖ NSSM ba≈üarƒ±yla indirildi")
            
        except Exception as e:
            print(f"‚ùå NSSM indirme hatasƒ±: {e}")
            print("Manuel indirme: https://nssm.cc/download")
            return False
    
    # Servisi kur
    service_name = "LinkcimVideoAPI"
    
    try:
        print(f"üîß '{service_name}' servisi kuruluyor...")
        
        # Mevcut servisi durdur ve kaldƒ±r
        subprocess.run([str(nssm_path), "stop", service_name], 
                      capture_output=True, text=True)
        subprocess.run([str(nssm_path), "remove", service_name, "confirm"], 
                      capture_output=True, text=True)
        
        # Yeni servisi kur
        result = subprocess.run([
            str(nssm_path), "install", service_name,
            python_exe, str(api_file)
        ], capture_output=True, text=True)
        
        if result.returncode != 0:
            print(f"‚ùå Servis kurulum hatasƒ±: {result.stderr}")
            return False
        
        # Servis ayarlarƒ±
        subprocess.run([str(nssm_path), "set", service_name, "DisplayName", 
                       "Linkcim Video Download API"], capture_output=True)
        subprocess.run([str(nssm_path), "set", service_name, "Description", 
                       "Video indirme API servisi"], capture_output=True)
        subprocess.run([str(nssm_path), "set", service_name, "AppDirectory", 
                       str(current_dir)], capture_output=True)
        subprocess.run([str(nssm_path), "set", service_name, "Start", 
                       "SERVICE_AUTO_START"], capture_output=True)
        
        # Servisi ba≈ülat
        result = subprocess.run([str(nssm_path), "start", service_name], 
                              capture_output=True, text=True)
        
        if result.returncode == 0:
            print("‚úÖ Servis ba≈üarƒ±yla kuruldu ve ba≈ülatƒ±ldƒ±!")
            print(f"üìç Servis Adƒ±: {service_name}")
            print("üîß Servis Y√∂netimi:")
            print("   - Durdur: net stop LinkcimVideoAPI")
            print("   - Ba≈ülat: net start LinkcimVideoAPI")
            print("   - Kaldƒ±r: nssm remove LinkcimVideoAPI confirm")
            return True
        else:
            print(f"‚ùå Servis ba≈ülatma hatasƒ±: {result.stderr}")
            return False
            
    except Exception as e:
        print(f"‚ùå Servis kurulum hatasƒ±: {e}")
        return False

def uninstall_service():
    """Servisi kaldƒ±rƒ±r"""
    current_dir = Path(__file__).parent.absolute()
    nssm_path = current_dir / "nssm.exe"
    service_name = "LinkcimVideoAPI"
    
    if not nssm_path.exists():
        print("‚ùå NSSM bulunamadƒ±")
        return False
    
    try:
        print(f"üóëÔ∏è '{service_name}' servisi kaldƒ±rƒ±lƒ±yor...")
        
        subprocess.run([str(nssm_path), "stop", service_name], 
                      capture_output=True, text=True)
        result = subprocess.run([str(nssm_path), "remove", service_name, "confirm"], 
                              capture_output=True, text=True)
        
        if result.returncode == 0:
            print("‚úÖ Servis ba≈üarƒ±yla kaldƒ±rƒ±ldƒ±!")
            return True
        else:
            print(f"‚ùå Servis kaldƒ±rma hatasƒ±: {result.stderr}")
            return False
            
    except Exception as e:
        print(f"‚ùå Hata: {e}")
        return False

if __name__ == "__main__":
    if len(sys.argv) > 1 and sys.argv[1] == "uninstall":
        uninstall_service()
    else:
        print("Linkcim Video API - Servis Kurulumu")
        print("1. Windows servisi olarak kur")
        print("2. Servisi kaldƒ±r")
        choice = input("Se√ßiminiz (1/2): ").strip()
        
        if choice == "1":
            install_as_service()
        elif choice == "2":
            uninstall_service()
        else:
            print("Ge√ßersiz se√ßim") 